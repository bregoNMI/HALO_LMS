# Generated by Django 4.2.13 on 2025-04-30 14:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("content", "0001_initial"),
    ]

    operations = [
        migrations.RemoveField(model_name="eventdate", name="course",),
        migrations.AddField(
            model_name="eventdate",
            name="content_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="eventdate",
            name="object_id",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name="Classroom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "schedule",
                    models.TextField(
                        blank=True, help_text="Optional notes like 'M/W/F at 10am'"
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="classrooms",
                        to="content.course",
                    ),
                ),
                (
                    "students",
                    models.ManyToManyField(
                        related_name="student_classrooms", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "teachers",
                    models.ManyToManyField(
                        related_name="teaching_classrooms", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
    ]
